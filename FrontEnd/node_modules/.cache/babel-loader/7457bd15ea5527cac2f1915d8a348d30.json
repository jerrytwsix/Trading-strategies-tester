{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eyeke\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\trading_new\\\\Reactjs-stock-market-tracking-app-tutorial-files\\\\src\\\\Stock.js\";\nimport React from 'react';\nimport Plot from 'react-plotly.js';\n\nclass Stock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValuesclose: [],\n      stockChartYValueshigh: [],\n      stockChartYValueslow: [],\n      stockChartYValuesopen: [],\n      value: 'AAPL',\n      time: '5min'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    if (event.target.name === \"timeframe\") {\n      this.setState({\n        time: event.target.value\n      });\n    } else if (event.target.name === \"start\") {\n      this.setState({\n        startdate: event.target.value\n      });\n    } else if (event.target.name === \"end\") {\n      this.setState({\n        enddate: event.target.value\n      });\n    } else this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const pointerToThis = this;\n    console.log(pointerToThis);\n    const API_KEY = '8FGEIG1UKRHEHI01'; //let StockSymbol = 'BTCUSDT';\n\n    let StockSymbol = this.state.value;\n    let timeFrame = this.state.time; //let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=full&apikey=${API_KEY}`;\n\n    let API_Call = \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\".concat(StockSymbol, \"&interval=\").concat(timeFrame, \"&apikey=\").concat(API_KEY);\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunctionclose = [];\n    let stockChartYValuesFunctionhigh = [];\n    let stockChartYValuesFunctionlow = [];\n    let stockChartYValuesFunctionopen = [];\n    fetch(API_Call).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      for (var key in data[\"Time Series (\".concat(timeFrame, \")\")]) {\n        stockChartXValuesFunction.push(key);\n        stockChartYValuesFunctionopen.push(data[\"Time Series (\".concat(timeFrame, \")\")][key]['1. open']);\n        stockChartYValuesFunctionhigh.push(data[\"Time Series (\".concat(timeFrame, \")\")][key]['2. high']);\n        stockChartYValuesFunctionlow.push(data[\"Time Series (\".concat(timeFrame, \")\")][key]['3. low']);\n        stockChartYValuesFunctionclose.push(data[\"Time Series (\".concat(timeFrame, \")\")][key]['4. close']);\n      } //console.log(stockChartYValuesFunction);\n\n\n      pointerToThis.setState({\n        stockChartXValues: stockChartXValuesFunction,\n        stockChartYValuesclose: stockChartYValuesFunctionclose,\n        stockChartYValueshigh: stockChartYValuesFunctionhigh,\n        stockChartYValueslow: stockChartYValuesFunctionlow,\n        stockChartYValuesopen: stockChartYValuesFunctionopen\n      });\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"content__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Candlestick plot of \", this.state.value), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"pair\",\n      onChange: this.handleChange,\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Select a time:\", React.createElement(\"select\", {\n      name: \"timeframe\",\n      time: this.state.time,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      time: \"1min\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"1min\"), React.createElement(\"option\", {\n      time: \"5min\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"5min\"), React.createElement(\"option\", {\n      time: \"15min\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"15min\"), React.createElement(\"option\", {\n      time: \"30min\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"30min\"), React.createElement(\"option\", {\n      time: \"30min\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"30min\"))), React.createElement(\"input\", {\n      type: \"Submit\",\n      value: \"Choose\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"date\",\n      name: \"start\",\n      startdate: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"date\",\n      name: \"end\",\n      enddate: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Plot, {\n      data: [{\n        x: this.state.stockChartXValues,\n        open: this.state.stockChartYValuesopen,\n        high: this.state.stockChartYValueshigh,\n        low: this.state.stockChartYValueslow,\n        close: this.state.stockChartYValuesclose,\n        //y: this.state.stockChartYValuesopen,\n        type: 'candlestick'\n      }],\n      layout: {\n        width: 1000,\n        height: 440\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Stock;","map":{"version":3,"sources":["C:\\Users\\eyeke\\OneDrive\\Рабочий стол\\trading_new\\Reactjs-stock-market-tracking-app-tutorial-files\\src\\Stock.js"],"names":["React","Plot","Stock","Component","constructor","props","state","stockChartXValues","stockChartYValuesclose","stockChartYValueshigh","stockChartYValueslow","stockChartYValuesopen","value","time","handleChange","bind","handleSubmit","event","target","name","setState","startdate","enddate","pointerToThis","console","log","API_KEY","StockSymbol","timeFrame","API_Call","stockChartXValuesFunction","stockChartYValuesFunctionclose","stockChartYValuesFunctionhigh","stockChartYValuesFunctionlow","stockChartYValuesFunctionopen","fetch","then","response","json","data","key","push","preventDefault","render","x","open","high","low","close","type","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Plot from 'react-plotly.js';\r\n\r\n\r\n\r\nclass Stock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stockChartXValues: [],\r\n      stockChartYValuesclose: [],\r\n      stockChartYValueshigh: [],\r\n      stockChartYValueslow: [],\r\n      stockChartYValuesopen: [],\r\n      value: 'AAPL',\r\n      time: '5min',\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  handleChange(event) {\r\n    if (event.target.name === \"timeframe\") {\r\n      this.setState({ time: event.target.value });\r\n    } else if (event.target.name === \"start\") {\r\n      this.setState({ startdate: event.target.value });\r\n    } else if (event.target.name === \"end\") {\r\n      this.setState({ enddate: event.target.value });\r\n    }\r\n    else\r\n      this.setState({ value: event.target.value });\r\n  }\r\n\r\n\r\n  handleSubmit(event) {\r\n    const pointerToThis = this;\r\n    console.log(pointerToThis);\r\n    const API_KEY = '8FGEIG1UKRHEHI01';\r\n    //let StockSymbol = 'BTCUSDT';\r\n    let StockSymbol = this.state.value;\r\n    let timeFrame = this.state.time;\r\n\r\n    //let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=full&apikey=${API_KEY}`;\r\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${StockSymbol}&interval=${timeFrame}&apikey=${API_KEY}`\r\n    let stockChartXValuesFunction = [];\r\n    let stockChartYValuesFunctionclose = [];\r\n    let stockChartYValuesFunctionhigh = [];\r\n    let stockChartYValuesFunctionlow = [];\r\n    let stockChartYValuesFunctionopen = [];\r\n\r\n    fetch(API_Call)\r\n      .then(\r\n        function (response) {\r\n          return response.json();\r\n        }\r\n      )\r\n      .then(\r\n        function (data) {\r\n\r\n          for (var key in data[`Time Series (${timeFrame})`]) {\r\n            stockChartXValuesFunction.push(key);\r\n            stockChartYValuesFunctionopen.push(data[`Time Series (${timeFrame})`][key]['1. open']);\r\n            stockChartYValuesFunctionhigh.push(data[`Time Series (${timeFrame})`][key]['2. high']);\r\n            stockChartYValuesFunctionlow.push(data[`Time Series (${timeFrame})`][key]['3. low']);\r\n            stockChartYValuesFunctionclose.push(data[`Time Series (${timeFrame})`][key]['4. close']);\r\n          }\r\n\r\n          //console.log(stockChartYValuesFunction);\r\n          pointerToThis.setState({\r\n            stockChartXValues: stockChartXValuesFunction,\r\n            stockChartYValuesclose: stockChartYValuesFunctionclose,\r\n            stockChartYValueshigh: stockChartYValuesFunctionhigh,\r\n            stockChartYValueslow: stockChartYValuesFunctionlow,\r\n            stockChartYValuesopen: stockChartYValuesFunctionopen\r\n          });\r\n        }\r\n      )\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"content__title\">Candlestick plot of {this.state.value}</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input name=\"pair\" onChange={this.handleChange} value={this.state.value} />\r\n          <button>\r\n            Submit\r\n          </button>\r\n        </form>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Select a time:\r\n            <select name=\"timeframe\" time={this.state.time} onChange={this.handleChange}>\r\n              <option time=\"1min\">1min</option>\r\n              <option time=\"5min\">5min</option>\r\n              <option time=\"15min\">15min</option>\r\n              <option time=\"30min\">30min</option>\r\n              <option time=\"30min\">30min</option>\r\n            </select>\r\n          </label>\r\n          <input type=\"Submit\" value=\"Choose\" />\r\n        </form>\r\n\r\n        <input onChange={this.handleChange} type=\"date\" name=\"start\" startdate=\"\"></input>\r\n        <input onChange={this.handleChange} type=\"date\" name=\"end\" enddate=\"\"></input>\r\n\r\n        <Plot\r\n          data={[\r\n            {\r\n              x: this.state.stockChartXValues,\r\n              open: this.state.stockChartYValuesopen,\r\n              high: this.state.stockChartYValueshigh,\r\n              low: this.state.stockChartYValueslow,\r\n              close: this.state.stockChartYValuesclose,\r\n              //y: this.state.stockChartYValuesopen,\r\n              type: 'candlestick',\r\n            }\r\n          ]}\r\n          layout={{ width: 1000, height: 440 }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stock;"]},"metadata":{},"sourceType":"module"}