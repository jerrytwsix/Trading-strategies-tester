{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eyeke\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\trading_new\\\\Reactjs-stock-market-tracking-app-tutorial-files\\\\src\\\\Stock.js\";\nimport React from 'react';\nimport Plot from 'react-plotly.js';\n\nclass Stock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValuesclose: [],\n      stockChartYValueshigh: [],\n      stockChartYValueslow: [],\n      stockChartYValuesopen: [],\n      text: ''\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var text = this.state.text;\n    console.log(\"submitted fal\", text);\n    this.setState({\n      text: ''\n    });\n  }\n\n  handleChange(event) {\n    var text = event.target.value;\n    console.log(text);\n    this.setState({\n      text: text\n    });\n  }\n\n  componentDidMount() {\n    this.fetchStock();\n  }\n\n  fetchStock() {\n    const pointerToThis = this;\n    console.log(pointerToThis);\n    const API_KEY = '8FGEIG1UKRHEHI01'; //let StockSymbol = 'BTCUSDT';\n\n    let StockSymbol = document.getElementById('pairs').value;\n    let API_Call = \"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=\".concat(StockSymbol, \"&outputsize=compact&apikey=\").concat(API_KEY);\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunctionclose = [];\n    let stockChartYValuesFunctionhigh = [];\n    let stockChartYValuesFunctionlow = [];\n    let stockChartYValuesFunctionopen = [];\n    fetch(API_Call).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n\n      for (var key in data['Time Series (Daily)']) {\n        stockChartXValuesFunction.push(key);\n        stockChartYValuesFunctionopen.push(data['Time Series (Daily)'][key]['1. open']);\n        stockChartYValuesFunctionhigh.push(data['Time Series (Daily)'][key]['2. high']);\n        stockChartYValuesFunctionlow.push(data['Time Series (Daily)'][key]['3. low']);\n        stockChartYValuesFunctionclose.push(data['Time Series (Daily)'][key]['4. close']);\n      } //console.log(stockChartYValuesFunction);\n\n\n      pointerToThis.setState({\n        stockChartXValues: stockChartXValuesFunction,\n        stockChartYValuesclose: stockChartYValuesFunctionclose,\n        stockChartYValueshigh: stockChartYValuesFunctionhigh,\n        stockChartYValueslow: stockChartYValuesFunctionlow,\n        stockChartYValuesopen: stockChartYValuesFunctionopen\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange.bind(this),\n      value: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"select\", {\n      onChange: fetchStock(),\n      id: \"pairs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"BTCUSDT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"BTCUSDT\"), React.createElement(\"option\", {\n      value: \"ETHUSDT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"ETHUSDT\")), React.createElement(Plot, {\n      data: [{\n        x: this.state.stockChartXValues,\n        open: this.state.stockChartYValuesopen,\n        high: this.state.stockChartYValueshigh,\n        low: this.state.stockChartYValueslow,\n        close: this.state.stockChartYValuesclose,\n        //y: this.state.stockChartYValuesopen,\n        type: 'candlestick'\n      }],\n      layout: {\n        width: 1000,\n        height: 440\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Stock;","map":{"version":3,"sources":["C:\\Users\\eyeke\\OneDrive\\Рабочий стол\\trading_new\\Reactjs-stock-market-tracking-app-tutorial-files\\src\\Stock.js"],"names":["React","Plot","Stock","Component","constructor","props","state","stockChartXValues","stockChartYValuesclose","stockChartYValueshigh","stockChartYValueslow","stockChartYValuesopen","text","handleSubmit","event","preventDefault","console","log","setState","handleChange","target","value","componentDidMount","fetchStock","pointerToThis","API_KEY","StockSymbol","document","getElementById","API_Call","stockChartXValuesFunction","stockChartYValuesFunctionclose","stockChartYValuesFunctionhigh","stockChartYValuesFunctionlow","stockChartYValuesFunctionopen","fetch","then","response","json","data","key","push","render","bind","x","open","high","low","close","type","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nclass Stock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stockChartXValues: [],\r\n      stockChartYValuesclose: [],\r\n      stockChartYValueshigh: [],\r\n      stockChartYValueslow: [],\r\n      stockChartYValuesopen: [],\r\n      text: '',\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    var text = this.state.text;\r\n    console.log(\"submitted fal\", text);\r\n    this.setState({ text: '' });\r\n  }\r\n\r\n  handleChange(event) {\r\n    var text = event.target.value;\r\n    console.log(text);\r\n    this.setState({ text: text });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchStock();\r\n  }\r\n\r\n  fetchStock() {\r\n    const pointerToThis = this;\r\n    console.log(pointerToThis);\r\n    const API_KEY = '8FGEIG1UKRHEHI01';\r\n    //let StockSymbol = 'BTCUSDT';\r\n    let StockSymbol = document.getElementById('pairs').value;\r\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\r\n    let stockChartXValuesFunction = [];\r\n    let stockChartYValuesFunctionclose = [];\r\n    let stockChartYValuesFunctionhigh = [];\r\n    let stockChartYValuesFunctionlow = [];\r\n    let stockChartYValuesFunctionopen = [];\r\n\r\n    fetch(API_Call)\r\n      .then(\r\n        function (response) {\r\n          return response.json();\r\n        }\r\n      )\r\n      .then(\r\n        function (data) {\r\n          console.log(data);\r\n\r\n          for (var key in data['Time Series (Daily)']) {\r\n            stockChartXValuesFunction.push(key);\r\n            stockChartYValuesFunctionopen.push(data['Time Series (Daily)'][key]['1. open']);\r\n            stockChartYValuesFunctionhigh.push(data['Time Series (Daily)'][key]['2. high']);\r\n            stockChartYValuesFunctionlow.push(data['Time Series (Daily)'][key]['3. low']);\r\n            stockChartYValuesFunctionclose.push(data['Time Series (Daily)'][key]['4. close']);\r\n          }\r\n\r\n          //console.log(stockChartYValuesFunction);\r\n          pointerToThis.setState({\r\n            stockChartXValues: stockChartXValuesFunction,\r\n            stockChartYValuesclose: stockChartYValuesFunctionclose,\r\n            stockChartYValueshigh: stockChartYValuesFunctionhigh,\r\n            stockChartYValueslow: stockChartYValuesFunctionlow,\r\n            stockChartYValuesopen: stockChartYValuesFunctionopen\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit.bind(this)}>\r\n          <input onChange={this.handleChange.bind(this)} value={this.state.text} />\r\n          <button>Submit</button>\r\n        </form>\r\n\r\n        <select onChange={fetchStock()} id=\"pairs\">\r\n          <option value=\"BTCUSDT\">BTCUSDT</option>\r\n          <option value=\"ETHUSDT\">ETHUSDT</option>\r\n        </select>\r\n\r\n        <Plot\r\n          data={[\r\n            {\r\n              x: this.state.stockChartXValues,\r\n              open: this.state.stockChartYValuesopen,\r\n              high: this.state.stockChartYValueshigh,\r\n              low: this.state.stockChartYValueslow,\r\n              close: this.state.stockChartYValuesclose,\r\n              //y: this.state.stockChartYValuesopen,\r\n              type: 'candlestick',\r\n            }\r\n          ]}\r\n          layout={{ width: 1000, height: 440 }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stock;"]},"metadata":{},"sourceType":"module"}