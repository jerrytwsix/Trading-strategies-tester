{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eyeke\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\trading_new\\\\Reactjs-stock-market-tracking-app-tutorial-files\\\\src\\\\Stock.js\";\nimport React from 'react';\nimport Plot from 'react-plotly.js';\nimport Token from './Token';\n\nclass Stock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValuesclose: [],\n      stockChartYValueshigh: [],\n      stockChartYValueslow: [],\n      stockChartYValuesopen: [],\n      value: 'BTCUSDT'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } //  handleSubmit(event) {\n  //    event.preventDefault();\n  //    var text = this.state.text;\n  //    console.log(\"submitted fal\", text);\n  ///   this.setState({ text: '' });\n  //  }\n  // handleChange(event) {\n  //   var text = event.target.value;\n  //   console.log(text);\n  //   this.setState({ text: text });\n  // }\n\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const pointerToThis = this;\n    console.log(pointerToThis);\n    const API_KEY = '8FGEIG1UKRHEHI01'; //let StockSymbol = 'BTCUSDT';\n\n    let StockSymbol = this.state.value;\n    let API_Call = \"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=\".concat(StockSymbol, \"&outputsize=compact&apikey=\").concat(API_KEY);\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunctionclose = [];\n    let stockChartYValuesFunctionhigh = [];\n    let stockChartYValuesFunctionlow = [];\n    let stockChartYValuesFunctionopen = [];\n    fetch(API_Call).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n\n      for (var key in data['Time Series (Daily)']) {\n        stockChartXValuesFunction.push(key);\n        stockChartYValuesFunctionopen.push(data['Time Series (Daily)'][key]['1. open']);\n        stockChartYValuesFunctionhigh.push(data['Time Series (Daily)'][key]['2. high']);\n        stockChartYValuesFunctionlow.push(data['Time Series (Daily)'][key]['3. low']);\n        stockChartYValuesFunctionclose.push(data['Time Series (Daily)'][key]['4. close']);\n      } //console.log(stockChartYValuesFunction);\n\n\n      pointerToThis.setState({\n        stockChartXValues: stockChartXValuesFunction,\n        stockChartYValuesclose: stockChartYValuesFunctionclose,\n        stockChartYValueshigh: stockChartYValuesFunctionhigh,\n        stockChartYValueslow: stockChartYValuesFunctionlow,\n        stockChartYValuesopen: stockChartYValuesFunctionopen\n      });\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"content__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Candlestick plot of \", this.state.value), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange.bind(this),\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(Plot, {\n      data: [{\n        x: this.state.stockChartXValues,\n        open: this.state.stockChartYValuesopen,\n        high: this.state.stockChartYValueshigh,\n        low: this.state.stockChartYValueslow,\n        close: this.state.stockChartYValuesclose,\n        //y: this.state.stockChartYValuesopen,\n        type: 'candlestick'\n      }],\n      layout: {\n        width: 1000,\n        height: 440\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Stock;","map":{"version":3,"sources":["C:\\Users\\eyeke\\OneDrive\\Рабочий стол\\trading_new\\Reactjs-stock-market-tracking-app-tutorial-files\\src\\Stock.js"],"names":["React","Plot","Token","Stock","Component","constructor","props","state","stockChartXValues","stockChartYValuesclose","stockChartYValueshigh","stockChartYValueslow","stockChartYValuesopen","value","handleChange","bind","handleSubmit","event","setState","target","pointerToThis","console","log","API_KEY","StockSymbol","API_Call","stockChartXValuesFunction","stockChartYValuesFunctionclose","stockChartYValuesFunctionhigh","stockChartYValuesFunctionlow","stockChartYValuesFunctionopen","fetch","then","response","json","data","key","push","preventDefault","render","x","open","high","low","close","type","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport Token from './Token'\r\n\r\nclass Stock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stockChartXValues: [],\r\n      stockChartYValuesclose: [],\r\n      stockChartYValueshigh: [],\r\n      stockChartYValueslow: [],\r\n      stockChartYValuesopen: [],\r\n      value: 'BTCUSDT',\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  //  handleSubmit(event) {\r\n  //    event.preventDefault();\r\n  //    var text = this.state.text;\r\n  //    console.log(\"submitted fal\", text);\r\n  ///   this.setState({ text: '' });\r\n  //  }\r\n\r\n  // handleChange(event) {\r\n  //   var text = event.target.value;\r\n  //   console.log(text);\r\n  //   this.setState({ text: text });\r\n  // }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n\r\n  handleSubmit(event) {\r\n    const pointerToThis = this;\r\n    console.log(pointerToThis);\r\n    const API_KEY = '8FGEIG1UKRHEHI01';\r\n    //let StockSymbol = 'BTCUSDT';\r\n    let StockSymbol = this.state.value;\r\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\r\n    let stockChartXValuesFunction = [];\r\n    let stockChartYValuesFunctionclose = [];\r\n    let stockChartYValuesFunctionhigh = [];\r\n    let stockChartYValuesFunctionlow = [];\r\n    let stockChartYValuesFunctionopen = [];\r\n\r\n    fetch(API_Call)\r\n      .then(\r\n        function (response) {\r\n          return response.json();\r\n        }\r\n      )\r\n      .then(\r\n        function (data) {\r\n          console.log(data);\r\n\r\n          for (var key in data['Time Series (Daily)']) {\r\n            stockChartXValuesFunction.push(key);\r\n            stockChartYValuesFunctionopen.push(data['Time Series (Daily)'][key]['1. open']);\r\n            stockChartYValuesFunctionhigh.push(data['Time Series (Daily)'][key]['2. high']);\r\n            stockChartYValuesFunctionlow.push(data['Time Series (Daily)'][key]['3. low']);\r\n            stockChartYValuesFunctionclose.push(data['Time Series (Daily)'][key]['4. close']);\r\n          }\r\n\r\n          //console.log(stockChartYValuesFunction);\r\n          pointerToThis.setState({\r\n            stockChartXValues: stockChartXValuesFunction,\r\n            stockChartYValuesclose: stockChartYValuesFunctionclose,\r\n            stockChartYValueshigh: stockChartYValuesFunctionhigh,\r\n            stockChartYValueslow: stockChartYValuesFunctionlow,\r\n            stockChartYValuesopen: stockChartYValuesFunctionopen\r\n          });\r\n        }\r\n      )\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"content__title\">Candlestick plot of {this.state.value}</h1>\r\n        <form onSubmit={this.handleSubmit.bind(this)}>\r\n          <input onChange={this.handleChange.bind(this)} value={this.state.value} />\r\n          <button>\r\n            Submit\r\n          </button>\r\n\r\n\r\n        </form>\r\n\r\n        <Plot\r\n          data={[\r\n            {\r\n              x: this.state.stockChartXValues,\r\n              open: this.state.stockChartYValuesopen,\r\n              high: this.state.stockChartYValueshigh,\r\n              low: this.state.stockChartYValueslow,\r\n              close: this.state.stockChartYValuesclose,\r\n              //y: this.state.stockChartYValuesopen,\r\n              type: 'candlestick',\r\n            }\r\n          ]}\r\n          layout={{ width: 1000, height: 440 }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stock;"]},"metadata":{},"sourceType":"module"}