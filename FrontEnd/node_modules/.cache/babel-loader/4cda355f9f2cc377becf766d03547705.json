{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eyeke\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\trading_new\\\\Reactjs-stock-market-tracking-app-tutorial-files\\\\src\\\\Stock.js\";\nimport React from 'react';\nimport Plot from 'react-plotly.js';\n\nclass Stock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValuesclose: [],\n      stockChartYValueshigh: [],\n      stockChartYValueslow: [],\n      stockChartYValuesopen: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStock();\n  }\n\n  fetchStock() {\n    const pointerToThis = this;\n    console.log(pointerToThis);\n    const API_KEY = '8FGEIG1UKRHEHI01';\n    let StockSymbol = 'FB';\n    let API_Call = \"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=\".concat(StockSymbol, \"&outputsize=compact&apikey=\").concat(API_KEY);\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunctionclose = [];\n    let stockChartYValuesFunctionhigh = [];\n    let stockChartYValuesFunctionlow = [];\n    let stockChartYValuesFunctionopen = [];\n    fetch(API_Call).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n\n      for (var key in data['Time Series (Daily)']) {\n        stockChartXValuesFunction.push(key);\n        stockChartYValuesFunctionopen.push(data['Time Series (Daily)'][key]['1. open']);\n        stockChartYValuesFunctionhigh.push(data['Time Series (Daily)'][key]['2. high']);\n        stockChartYValuesFunctionlow.push(data['Time Series (Daily)'][key]['3. low']);\n        stockChartYValuesFunctionclose.push(data['Time Series (Daily)'][key]['4. close']);\n      } //console.log(stockChartYValuesFunction);\n\n\n      pointerToThis.setState({\n        stockChartXValues: stockChartXValuesFunction,\n        stockChartYValuesclose: stockChartYValuesFunctionclose,\n        stockChartYValueshigh: stockChartYValuesFunctionhigh,\n        stockChartYValueslow: stockChartYValuesFunctionlow,\n        stockChartYValuesopen: stockChartYValuesFunctionopen\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Stock Market\"), React.createElement(Plot, {\n      data: [{\n        x: this.state.stockChartXValues,\n        y: this.state.stockChartYValuesopen,\n        type: 'scatter',\n        mode: 'lines+markers',\n        marker: {\n          color: 'red'\n        }\n      }],\n      layout: {\n        width: 720,\n        height: 440,\n        title: 'A Fancy Plot'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Stock;","map":{"version":3,"sources":["C:\\Users\\eyeke\\OneDrive\\Рабочий стол\\trading_new\\Reactjs-stock-market-tracking-app-tutorial-files\\src\\Stock.js"],"names":["React","Plot","Stock","Component","constructor","props","state","stockChartXValues","stockChartYValuesclose","stockChartYValueshigh","stockChartYValueslow","stockChartYValuesopen","componentDidMount","fetchStock","pointerToThis","console","log","API_KEY","StockSymbol","API_Call","stockChartXValuesFunction","stockChartYValuesFunctionclose","stockChartYValuesFunctionhigh","stockChartYValuesFunctionlow","stockChartYValuesFunctionopen","fetch","then","response","json","data","key","push","setState","render","x","y","type","mode","marker","color","width","height","title"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nclass Stock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stockChartXValues: [],\r\n      stockChartYValuesclose: [],\r\n      stockChartYValueshigh: [],\r\n      stockChartYValueslow: [],\r\n      stockChartYValuesopen: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchStock();\r\n  }\r\n\r\n  fetchStock() {\r\n    const pointerToThis = this;\r\n    console.log(pointerToThis);\r\n    const API_KEY = '8FGEIG1UKRHEHI01';\r\n    let StockSymbol = 'FB';\r\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\r\n    let stockChartXValuesFunction = [];\r\n    let stockChartYValuesFunctionclose = [];\r\n    let stockChartYValuesFunctionhigh = [];\r\n    let stockChartYValuesFunctionlow = [];\r\n    let stockChartYValuesFunctionopen = [];\r\n\r\n    fetch(API_Call)\r\n      .then(\r\n        function(response) {\r\n          return response.json();\r\n        }\r\n      )\r\n      .then(\r\n        function(data) {\r\n          console.log(data);\r\n\r\n          for (var key in data['Time Series (Daily)']) {\r\n            stockChartXValuesFunction.push(key);\r\n            stockChartYValuesFunctionopen.push(data['Time Series (Daily)'][key]['1. open']);\r\n            stockChartYValuesFunctionhigh.push(data['Time Series (Daily)'][key]['2. high']);\r\n            stockChartYValuesFunctionlow.push(data['Time Series (Daily)'][key]['3. low']);\r\n            stockChartYValuesFunctionclose.push(data['Time Series (Daily)'][key]['4. close']);\r\n          }\r\n\r\n          //console.log(stockChartYValuesFunction);\r\n          pointerToThis.setState({\r\n            stockChartXValues: stockChartXValuesFunction,\r\n            stockChartYValuesclose: stockChartYValuesFunctionclose,\r\n            stockChartYValueshigh: stockChartYValuesFunctionhigh,\r\n            stockChartYValueslow: stockChartYValuesFunctionlow,\r\n            stockChartYValuesopen: stockChartYValuesFunctionopen\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Stock Market</h1>\r\n        <Plot\r\n          data={[\r\n            {\r\n              x: this.state.stockChartXValues,\r\n              y: this.state.stockChartYValuesopen,\r\n              type: 'scatter',\r\n              mode: 'lines+markers',\r\n              marker: {color: 'red'},\r\n            }\r\n          ]}\r\n          layout={{width: 720, height: 440, title: 'A Fancy Plot'}}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stock;"]},"metadata":{},"sourceType":"module"}